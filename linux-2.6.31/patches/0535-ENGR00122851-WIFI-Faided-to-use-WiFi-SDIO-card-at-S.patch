From 39a0d8e5e29014f6ceb346212d84ae0aea8cfc9e Mon Sep 17 00:00:00 2001
From: r65037 <r65037@shlinux1.ap.freescale.net>
Date: Tue, 27 Apr 2010 11:33:55 +0800
Subject: [PATCH] ENGR00122851 WIFI: Faided to use WiFi SDIO card at SD slot0

The WP bit is set in the 4Bytes wifi write operations
accidentally.
That would cause the INT wouldn't be generated.

There is no such kind issue in SD/MMC write operations.
Since that the BUS load on wifi maybe much lighter than
that when SD/MMC is used.

Remove the 100K pull up pad configuration on the eSDHC1
WP pin can solve this issue.
Or
Remove the SION configuration can fix this issue too.
In the end, the second method is used.

Unify the platform data configurations, and enable the registers
dump when there are errors in the execution of esdhc driver.

Signed-off-by: Richard Zhu <r65037@freescale.com>
---
 arch/arm/mach-mx5/mx51_babbage.c      |    7 ++++---
 arch/arm/mach-mx5/mx51_babbage_gpio.c |    2 +-
 drivers/mmc/host/mx_sdhci.c           |   20 ++++++++++----------
 3 files changed, 15 insertions(+), 14 deletions(-)

diff --git a/arch/arm/mach-mx5/mx51_babbage.c b/arch/arm/mach-mx5/mx51_babbage.c
index 4a962ab..0f32381 100644
--- a/arch/arm/mach-mx5/mx51_babbage.c
+++ b/arch/arm/mach-mx5/mx51_babbage.c
@@ -732,11 +732,12 @@ static unsigned int sdhc_get_card_det_status(struct device *dev)
 }
 
 static struct mxc_mmc_platform_data mmc1_data = {
-	.ocr_mask = MMC_VDD_31_32,
+	.ocr_mask = MMC_VDD_27_28 | MMC_VDD_28_29 | MMC_VDD_29_30 |
+	    MMC_VDD_31_32,
 	.caps = MMC_CAP_4_BIT_DATA,
-	.min_clk = 400000,
+	.min_clk = 150000,
 	.max_clk = 52000000,
-	.card_inserted_state = 1,
+	.card_inserted_state = 0,
 	.status = sdhc_get_card_det_status,
 	.wp_status = sdhc_write_protect,
 	.clock_mmc = "esdhc_clk",
diff --git a/arch/arm/mach-mx5/mx51_babbage_gpio.c b/arch/arm/mach-mx5/mx51_babbage_gpio.c
index 4b3e2ee..5dfc7fe 100644
--- a/arch/arm/mach-mx5/mx51_babbage_gpio.c
+++ b/arch/arm/mach-mx5/mx51_babbage_gpio.c
@@ -297,7 +297,7 @@ static struct mxc_iomux_pin_cfg __initdata mxc_iomux_pins[] = {
 	 (PAD_CTL_HYS_ENABLE | PAD_CTL_100K_PU),
 	 },
 	{
-	 MX51_PIN_GPIO1_1, IOMUX_CONFIG_GPIO | IOMUX_CONFIG_SION,
+	 MX51_PIN_GPIO1_1, IOMUX_CONFIG_GPIO,
 	 (PAD_CTL_HYS_ENABLE | PAD_CTL_100K_PU),
 	 },
 	{
diff --git a/drivers/mmc/host/mx_sdhci.c b/drivers/mmc/host/mx_sdhci.c
index 805c3e9..ff73552 100644
--- a/drivers/mmc/host/mx_sdhci.c
+++ b/drivers/mmc/host/mx_sdhci.c
@@ -141,32 +141,32 @@ EXPORT_SYMBOL(mxc_mmc_force_detect);
 
 static void sdhci_dumpregs(struct sdhci_host *host)
 {
-	printk(KERN_DEBUG DRIVER_NAME
+	printk(KERN_INFO DRIVER_NAME
 	       ": ============== REGISTER DUMP ==============\n");
 
-	printk(KERN_DEBUG DRIVER_NAME ": Sys addr: 0x%08x | Version:  0x%08x\n",
+	printk(KERN_INFO DRIVER_NAME ": Sys addr: 0x%08x | Version:  0x%08x\n",
 	       readl(host->ioaddr + SDHCI_DMA_ADDRESS),
 	       readl(host->ioaddr + SDHCI_HOST_VERSION));
-	printk(KERN_DEBUG DRIVER_NAME ": Blk size: 0x%08x | Blk cnt:  0x%08x\n",
+	printk(KERN_INFO DRIVER_NAME ": Blk size: 0x%08x | Blk cnt:  0x%08x\n",
 	       (readl(host->ioaddr + SDHCI_BLOCK_SIZE) & 0xFFFF),
 	       (readl(host->ioaddr + SDHCI_BLOCK_COUNT) >> 16));
-	printk(KERN_DEBUG DRIVER_NAME ": Argument: 0x%08x | Trn mode: 0x%08x\n",
+	printk(KERN_INFO DRIVER_NAME ": Argument: 0x%08x | Trn mode: 0x%08x\n",
 	       readl(host->ioaddr + SDHCI_ARGUMENT),
 	       readl(host->ioaddr + SDHCI_TRANSFER_MODE));
-	printk(KERN_DEBUG DRIVER_NAME ": Present:  0x%08x | Host ctl: 0x%08x\n",
+	printk(KERN_INFO DRIVER_NAME ": Present:  0x%08x | Host ctl: 0x%08x\n",
 	       readl(host->ioaddr + SDHCI_PRESENT_STATE),
 	       readl(host->ioaddr + SDHCI_HOST_CONTROL));
-	printk(KERN_DEBUG DRIVER_NAME ": Clock:    0x%08x\n",
+	printk(KERN_INFO DRIVER_NAME ": Clock:    0x%08x\n",
 	       readl(host->ioaddr + SDHCI_CLOCK_CONTROL));
-	printk(KERN_DEBUG DRIVER_NAME ": Int stat: 0x%08x\n",
+	printk(KERN_INFO DRIVER_NAME ": Int stat: 0x%08x\n",
 	       readl(host->ioaddr + SDHCI_INT_STATUS));
-	printk(KERN_DEBUG DRIVER_NAME ": Int enab: 0x%08x | Sig enab: 0x%08x\n",
+	printk(KERN_INFO DRIVER_NAME ": Int enab: 0x%08x | Sig enab: 0x%08x\n",
 	       readl(host->ioaddr + SDHCI_INT_ENABLE),
 	       readl(host->ioaddr + SDHCI_SIGNAL_ENABLE));
-	printk(KERN_DEBUG DRIVER_NAME ": Caps:     0x%08x\n",
+	printk(KERN_INFO DRIVER_NAME ": Caps:     0x%08x\n",
 	       readl(host->ioaddr + SDHCI_CAPABILITIES));
 
-	printk(KERN_DEBUG DRIVER_NAME
+	printk(KERN_INFO DRIVER_NAME
 	       ": ===========================================\n");
 }
 
-- 
1.5.4.4

