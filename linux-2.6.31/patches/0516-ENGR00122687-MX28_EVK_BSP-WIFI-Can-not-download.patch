From ead3e8d212e43c982a46cd8496e4e3d8491d56ff Mon Sep 17 00:00:00 2001
From: Jeremy.Yao <r65161@freescale.com>
Date: Fri, 23 Apr 2010 11:22:04 +0800
Subject: [PATCH] ENGR00122687: [MX28_EVK_BSP] WIFI: Can not download files with large size

Fix SDIO quality

Signed-off-by: Jeremy Yao <r65161@freescale.com>
---
 drivers/mmc/host/mxs-mmc.c |   54 +++++++++++++++++++++++++++++--------------
 1 files changed, 36 insertions(+), 18 deletions(-)

diff --git a/drivers/mmc/host/mxs-mmc.c b/drivers/mmc/host/mxs-mmc.c
index c603522..de188fd 100644
--- a/drivers/mmc/host/mxs-mmc.c
+++ b/drivers/mmc/host/mxs-mmc.c
@@ -201,16 +201,11 @@ static irqreturn_t mmc_irq_handler(int irq, void *dev_id)
 	host->status =
 	    __raw_readl(host->ssp_base + HW_SSP_STATUS);
 
-	if (host->cmd)		/* else it is a bogus interrupt */
+	if ((c1 & BM_SSP_CTRL1_SDIO_IRQ) && (c1 & BM_SSP_CTRL1_SDIO_IRQ_EN))
+		mmc_signal_sdio_irq(host->mmc);
+	else if (host->cmd)
 		complete(&host->dma_done);
 
-	if ((c1 & BM_SSP_CTRL1_SDIO_IRQ) && (c1 & BM_SSP_CTRL1_SDIO_IRQ_EN)) {
-		__raw_writel(BM_SSP_CTRL0_SDIO_IRQ_CHECK, host->ssp_base + \
-			HW_SSP_CTRL0_CLR);
-		__raw_writel(BM_SSP_CTRL1_SDIO_IRQ_EN, host->ssp_base + \
-			HW_SSP_CTRL1_CLR);
-		mmc_signal_sdio_irq(host->mmc);
-	}
 	return IRQ_HANDLED;
 }
 
@@ -239,7 +234,9 @@ static void mxs_mmc_bc(struct mxs_mmc_host *host)
 {
 	struct mmc_command *cmd = host->cmd;
 	struct mxs_dma_desc *dma_desc = host->dma_desc;
+	unsigned long flags;
 
+	spin_lock_irqsave(&host->lock, flags);
 	dma_desc->cmd.cmd.bits.command = NO_DMA_XFER;
 	dma_desc->cmd.cmd.bits.irq = 1;
 	dma_desc->cmd.cmd.bits.dec_sem = 1;
@@ -255,7 +252,8 @@ static void mxs_mmc_bc(struct mxs_mmc_host *host)
 
 	if (host->sdio_irq_en) {
 		dma_desc->cmd.pio_words[0] |= BM_SSP_CTRL0_SDIO_IRQ_CHECK;
-		dma_desc->cmd.pio_words[1] |= BM_SSP_CMD0_CONT_CLKING_EN;
+		dma_desc->cmd.pio_words[1] |= BM_SSP_CMD0_CONT_CLKING_EN \
+			| BM_SSP_CMD0_SLOW_CLKING_EN;
 	}
 
 	init_completion(&host->dma_done);
@@ -265,6 +263,8 @@ static void mxs_mmc_bc(struct mxs_mmc_host *host)
 	dev_dbg(host->dev, "%s start DMA.\n", __func__);
 	if (mxs_dma_enable(host->dmach) < 0)
 		dev_err(host->dev, "mmc_dma_enable failed\n");
+
+	spin_unlock_irqrestore(&host->lock, flags);
 	wait_for_completion(&host->dma_done);
 
 	cmd->error = mxs_mmc_cmd_error(host->status);
@@ -273,6 +273,7 @@ static void mxs_mmc_bc(struct mxs_mmc_host *host)
 		dev_dbg(host->dev, "Command error 0x%x\n", cmd->error);
 		mxs_dma_reset(host->dmach);
 	}
+	mxs_dma_disable(host->dmach);
 }
 
 /* Send the ac command to the device */
@@ -284,7 +285,9 @@ static void mxs_mmc_ac(struct mxs_mmc_host *host)
 	u32 ssp_ctrl0;
 	u32 ssp_cmd0;
 	u32 ssp_cmd1;
+	unsigned long flags;
 
+	spin_lock_irqsave(&host->lock, flags);
 	ignore_crc = (mmc_resp_type(cmd) & MMC_RSP_CRC) ?
 	    0 : BM_SSP_CTRL0_IGNORE_CRC;
 	resp = (mmc_resp_type(cmd) & MMC_RSP_PRESENT) ?
@@ -305,7 +308,8 @@ static void mxs_mmc_ac(struct mxs_mmc_host *host)
 
 	if (host->sdio_irq_en) {
 		ssp_ctrl0 |= BM_SSP_CTRL0_SDIO_IRQ_CHECK;
-		ssp_cmd0 |= BM_SSP_CMD0_CONT_CLKING_EN;
+		ssp_cmd0 |= BM_SSP_CMD0_CONT_CLKING_EN \
+			| BM_SSP_CMD0_SLOW_CLKING_EN;
 	}
 
 	dma_desc->cmd.pio_words[0] = ssp_ctrl0;
@@ -319,6 +323,7 @@ static void mxs_mmc_ac(struct mxs_mmc_host *host)
 	dev_dbg(host->dev, "%s start DMA.\n", __func__);
 	if (mxs_dma_enable(host->dmach) < 0)
 		dev_err(host->dev, "mmc_dma_enable failed\n");
+	spin_unlock_irqrestore(&host->lock, flags);
 	wait_for_completion(&host->dma_done);
 
 	switch (mmc_resp_type(cmd)) {
@@ -356,6 +361,7 @@ static void mxs_mmc_ac(struct mxs_mmc_host *host)
 		dev_dbg(host->dev, "Command error 0x%x\n", cmd->error);
 		mxs_dma_reset(host->dmach);
 	}
+	mxs_dma_disable(host->dmach);
 }
 
 /* Copy data between sg list and dma buffer */
@@ -451,6 +457,7 @@ static void mxs_mmc_adtc(struct mxs_mmc_host *host)
 
 	u32 data_size = cmd->data->blksz * cmd->data->blocks;
 	u32 log2_block_size;
+	unsigned long flags;
 
 	ignore_crc = mmc_resp_type(cmd) & MMC_RSP_CRC ? 0 : 1;
 	resp = mmc_resp_type(cmd) & MMC_RSP_PRESENT ? 1 : 0;
@@ -463,6 +470,7 @@ static void mxs_mmc_adtc(struct mxs_mmc_host *host)
 		cmd->data->blksz, cmd->data->blocks, cmd->data->timeout_ns,
 		cmd->data->timeout_clks, cmd->data->flags);
 
+	spin_lock_irqsave(&host->lock, flags);
 	if (cmd->data->flags & MMC_DATA_WRITE) {
 		dev_dbg(host->dev, "Data Write\n");
 		copy_size = mxs_sg_dma_copy(host, data_size, 1);
@@ -551,17 +559,25 @@ static void mxs_mmc_adtc(struct mxs_mmc_host *host)
 		}
 		/* Configure the CMD0 */
 		ssp_cmd0 = BF(cmd->opcode, SSP_CMD0_CMD);
-	} else
-		ssp_cmd0 =
-		    BF(log2_block_size, SSP_BLOCK_SIZE_BLOCK_SIZE) |
-		    BF(cmd->opcode, SSP_CMD0_CMD) |
-		    BF(cmd->data->blocks - 1, SSP_BLOCK_SIZE_BLOCK_COUNT);
-
+	} else {
+		if ((1<<log2_block_size) != cmd->data->blksz) {
+			BUG_ON(cmd->data->blocks > 1);
+			ssp_cmd0 =
+				BF(0, SSP_BLOCK_SIZE_BLOCK_SIZE) |
+				BF(cmd->opcode, SSP_CMD0_CMD) |
+				BF(0, SSP_BLOCK_SIZE_BLOCK_COUNT);
+		} else
+			ssp_cmd0 =
+			BF(log2_block_size, SSP_BLOCK_SIZE_BLOCK_SIZE) |
+			BF(cmd->opcode, SSP_CMD0_CMD) |
+			BF(cmd->data->blocks - 1, SSP_BLOCK_SIZE_BLOCK_COUNT);
+	}
 	if (host->sdio_irq_en) {
 		ssp_ctrl0 |= BM_SSP_CTRL0_SDIO_IRQ_CHECK;
-		ssp_cmd0 |= BM_SSP_CMD0_CONT_CLKING_EN;
+		ssp_cmd0 |= BM_SSP_CMD0_CONT_CLKING_EN \
+			| BM_SSP_CMD0_SLOW_CLKING_EN;
 	}
-	if (cmd->opcode == 12)
+	if ((cmd->opcode == 12) || (cmd->opcode == 53))
 		ssp_cmd0 |= BM_SSP_CMD0_APPEND_8CYC;
 
 	ssp_cmd1 = BF(cmd->arg, SSP_CMD1_CMD_ARG);
@@ -584,6 +600,7 @@ static void mxs_mmc_adtc(struct mxs_mmc_host *host)
 	dev_dbg(host->dev, "%s start DMA.\n", __func__);
 	if (mxs_dma_enable(host->dmach) < 0)
 		dev_err(host->dev, "mmc_dma_enable failed\n");
+	spin_unlock_irqrestore(&host->lock, flags);
 	wait_for_completion(&host->dma_done);
 	if (host->regulator)
 		regulator_set_current_limit(host->regulator, 0, 0);
@@ -628,6 +645,7 @@ static void mxs_mmc_adtc(struct mxs_mmc_host *host)
 		dev_dbg(host->dev, "Transferred %u bytes\n",
 			cmd->data->bytes_xfered);
 	}
+	mxs_dma_disable(host->dmach);
 }
 
 /* Begin sedning a command to the card */
-- 
1.5.4.4

