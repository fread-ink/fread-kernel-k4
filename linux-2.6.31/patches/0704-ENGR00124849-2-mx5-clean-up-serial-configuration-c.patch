From 4f016161684b68e1437b5dd93abbde8eb92687dc Mon Sep 17 00:00:00 2001
From: Rob Herring <r.herring@freescale.com>
Date: Thu, 8 Jul 2010 11:39:39 -0500
Subject: [PATCH] ENGR00124849-2: mx5: clean-up serial configuration code

The serial device setup code includes board configuration header,
but is common for all boards. So make the configuration common for
all boards and remove the board headers as nothing else is used.

Signed-off-by: Rob Herring <r.herring@freescale.com>
---
 arch/arm/mach-mx5/board-mx51_3stack.h  |  125 --------------------------------
 arch/arm/mach-mx5/board-mx51_babbage.h |   85 ----------------------
 arch/arm/mach-mx5/board-mx53_evk.h     |   98 -------------------------
 arch/arm/mach-mx5/dma.c                |    2 +
 arch/arm/mach-mx5/mx51_3stack.c        |   39 ++++++++++-
 arch/arm/mach-mx5/mx51_babbage.c       |    2 +-
 arch/arm/mach-mx5/mx53_evk.c           |    2 +-
 arch/arm/mach-mx5/serial.c             |  109 +++++++---------------------
 arch/arm/mach-mx5/serial.h             |   77 --------------------
 9 files changed, 68 insertions(+), 471 deletions(-)

diff --git a/arch/arm/mach-mx5/board-mx51_3stack.h b/arch/arm/mach-mx5/board-mx51_3stack.h
deleted file mode 100644
index bd5afac..0000000
--- a/arch/arm/mach-mx5/board-mx51_3stack.h
+++ /dev/null
@@ -1,125 +0,0 @@
-/*
- * Copyright 2008-2009 Freescale Semiconductor, Inc. All Rights Reserved.
- */
-
-/*
- * The code contained herein is licensed under the GNU General Public
- * License. You may obtain a copy of the GNU General Public License
- * Version 2 or later at the following locations:
- *
- * http://www.opensource.org/licenses/gpl-license.html
- * http://www.gnu.org/copyleft/gpl.html
- */
-
-#ifndef __ASM_ARCH_MXC_BOARD_MX51_3STACK_H__
-#define __ASM_ARCH_MXC_BOARD_MX51_3STACK_H__
-
-/*!
- * @defgroup BRDCFG_MX51 Board Configuration Options
- * @ingroup MSL_MX51
- */
-
-/*!
- * @file mach-mx51/board-mx51_3stack.h
- *
- * @brief This file contains all the board level configuration options.
- *
- * It currently hold the options defined for MX51 3Stack Platform.
- *
- * @ingroup BRDCFG_MX51
- */
-
-/*
- * Include Files
- */
-#include <mach/mxc_uart.h>
-
-/*!
- * @name MXC UART board level configurations
- */
-/*! @{ */
-/*!
- * Specifies if the Irda transmit path is inverting
- */
-#define MXC_IRDA_TX_INV	0
-/*!
- * Specifies if the Irda receive path is inverting
- */
-#define MXC_IRDA_RX_INV	0
-
-/* UART 1 configuration */
-/*!
- * This define specifies if the UART port is configured to be in DTE or
- * DCE mode. There exists a define like this for each UART port. Valid
- * values that can be used are \b MODE_DTE or \b MODE_DCE.
- */
-#define UART1_MODE		MODE_DCE
-/*!
- * This define specifies if the UART is to be used for IRDA. There exists a
- * define like this for each UART port. Valid values that can be used are
- * \b IRDA or \b NO_IRDA.
- */
-#define UART1_IR		NO_IRDA
-/*!
- * This define is used to enable or disable a particular UART port. If
- * disabled, the UART will not be registered in the file system and the user
- * will not be able to access it. There exists a define like this for each UART
- * port. Specify a value of 1 to enable the UART and 0 to disable it.
- */
-#define UART1_ENABLED		1
-/*! @} */
-/* UART 2 configuration */
-#define UART2_MODE		MODE_DCE
-#define UART2_IR		NO_IRDA
-#define UART2_ENABLED		1
-/* UART 3 configuration */
-#define UART3_MODE		MODE_DCE
-#define UART3_IR		NO_IRDA
-#define UART3_ENABLED		1
-
-#define MXC_LL_UART_PADDR	UART1_BASE_ADDR
-#define MXC_LL_UART_VADDR	AIPS1_IO_ADDRESS(UART1_BASE_ADDR)
-
-#define DEBUG_BOARD_BASE_ADDRESS(n)	(n)
-/* LAN9217 ethernet base address */
-#define LAN9217_BASE_ADDR(n)	(DEBUG_BOARD_BASE_ADDRESS(n))
-/* External UART */
-#define UARTA_BASE_ADDR(n)	(DEBUG_BOARD_BASE_ADDRESS(n) + 0x8000)
-#define UARTB_BASE_ADDR(n)	(DEBUG_BOARD_BASE_ADDRESS(n) + 0x10000)
-
-#define BOARD_IO_ADDR(n)	(DEBUG_BOARD_BASE_ADDRESS(n) + 0x20000)
-/* LED switchs */
-#define LED_SWITCH_REG		0x00
-/* buttons */
-#define SWITCH_BUTTONS_REG	0x08
-/* status, interrupt */
-#define INTR_STATUS_REG	0x10
-#define INTR_MASK_REG		0x38
-#define INTR_RESET_REG		0x20
-/* magic word for debug CPLD */
-#define MAGIC_NUMBER1_REG	0x40
-#define MAGIC_NUMBER2_REG	0x48
-/* CPLD code version */
-#define CPLD_CODE_VER_REG	0x50
-/* magic word for debug CPLD */
-#define MAGIC_NUMBER3_REG	0x58
-/* module reset register*/
-#define MODULE_RESET_REG	0x60
-/* CPU ID and Personality ID */
-#define MCU_BOARD_ID_REG	0x68
-
-/* interrupts like external uart , external ethernet etc*/
-#define EXPIO_PARENT_INT	IOMUX_TO_IRQ(MX51_PIN_GPIO1_6)
-
-#define EXPIO_INT_ENET		(MXC_BOARD_IRQ_START + 0)
-#define EXPIO_INT_XUART_A 	(MXC_BOARD_IRQ_START + 1)
-#define EXPIO_INT_XUART_B 	(MXC_BOARD_IRQ_START + 2)
-#define EXPIO_INT_BUTTON_A 	(MXC_BOARD_IRQ_START + 3)
-#define EXPIO_INT_BUTTON_B 	(MXC_BOARD_IRQ_START + 4)
-
-/*! This is System IRQ used by LAN9217 */
-#define LAN9217_IRQ	EXPIO_INT_ENET
-
-extern int __init mx51_3stack_init_mc13892(void);
-
-#endif				/* __ASM_ARCH_MXC_BOARD_MX51_3STACK_H__ */
diff --git a/arch/arm/mach-mx5/board-mx51_babbage.h b/arch/arm/mach-mx5/board-mx51_babbage.h
deleted file mode 100644
index 1e6c7c8..0000000
--- a/arch/arm/mach-mx5/board-mx51_babbage.h
+++ /dev/null
@@ -1,85 +0,0 @@
-/*
- * Copyright 2009 Freescale Semiconductor, Inc. All Rights Reserved.
- */
-
-/*
- * The code contained herein is licensed under the GNU General Public
- * License. You may obtain a copy of the GNU General Public License
- * Version 2 or later at the following locations:
- *
- * http://www.opensource.org/licenses/gpl-license.html
- * http://www.gnu.org/copyleft/gpl.html
- */
-
-#ifndef __ASM_ARCH_MXC_BOARD_MX51_BABBAGE_H__
-#define __ASM_ARCH_MXC_BOARD_MX51_BABBAGE_H__
-
-/*!
- * @defgroup BRDCFG_MX51 Board Configuration Options
- * @ingroup MSL_MX51
- */
-
-/*!
- * @file mach-mx51/board-mx51_babbage.h
- *
- * @brief This file contains all the board level configuration options.
- *
- * It currently hold the options defined for MX51 Babbage Platform.
- *
- * @ingroup BRDCFG_MX51
- */
-
-/*
- * Include Files
- */
-#include <mach/mxc_uart.h>
-
-/*!
- * @name MXC UART board level configurations
- */
-/*! @{ */
-/*!
- * Specifies if the Irda transmit path is inverting
- */
-#define MXC_IRDA_TX_INV	0
-/*!
- * Specifies if the Irda receive path is inverting
- */
-#define MXC_IRDA_RX_INV	0
-
-/* UART 1 configuration */
-/*!
- * This define specifies if the UART port is configured to be in DTE or
- * DCE mode. There exists a define like this for each UART port. Valid
- * values that can be used are \b MODE_DTE or \b MODE_DCE.
- */
-#define UART1_MODE		MODE_DCE
-/*!
- * This define specifies if the UART is to be used for IRDA. There exists a
- * define like this for each UART port. Valid values that can be used are
- * \b IRDA or \b NO_IRDA.
- */
-#define UART1_IR		NO_IRDA
-/*!
- * This define is used to enable or disable a particular UART port. If
- * disabled, the UART will not be registered in the file system and the user
- * will not be able to access it. There exists a define like this for each UART
- * port. Specify a value of 1 to enable the UART and 0 to disable it.
- */
-#define UART1_ENABLED		1
-/*! @} */
-/* UART 2 configuration */
-#define UART2_MODE		MODE_DCE
-#define UART2_IR		IRDA
-#define UART2_ENABLED		1
-/* UART 3 configuration */
-#define UART3_MODE		MODE_DTE
-#define UART3_IR		NO_IRDA
-#define UART3_ENABLED		1
-
-#define MXC_LL_UART_PADDR	UART1_BASE_ADDR
-#define MXC_LL_UART_VADDR	AIPS1_IO_ADDRESS(UART1_BASE_ADDR)
-
-extern int __init mx51_babbage_init_mc13892(void);
-
-#endif				/* __ASM_ARCH_MXC_BOARD_MX51_BABBAGE_H__ */
diff --git a/arch/arm/mach-mx5/board-mx53_evk.h b/arch/arm/mach-mx5/board-mx53_evk.h
deleted file mode 100644
index 76e12ce..0000000
--- a/arch/arm/mach-mx5/board-mx53_evk.h
+++ /dev/null
@@ -1,98 +0,0 @@
-/*
- * Copyright (C) 2010 Freescale Semiconductor, Inc. All Rights Reserved.
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
-
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
-
- * You should have received a copy of the GNU General Public License along
- * with this program; if not, write to the Free Software Foundation, Inc.,
- * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
- */
-
-#ifndef __ASM_ARCH_MXC_BOARD_MX53_EVK_H__
-#define __ASM_ARCH_MXC_BOARD_MX53_EVK_H__
-
-/*!
- * @defgroup BRDCFG_MX53 Board Configuration Options
- * @ingroup MSL_MX53
- */
-
-/*!
- * @file mach-mx53/board-mx53_evk.h
- *
- * @brief This file contains all the board level configuration options.
- *
- * It currently hold the options defined for MX53 EVK Platform.
- *
- * @ingroup BRDCFG_MX53
- */
-
-/*
- * Include Files
- */
-#include <mach/mxc_uart.h>
-
-/*!
- * @name MXC UART board level configurations
- */
-/*! @{ */
-/*!
- * Specifies if the Irda transmit path is inverting
- */
-#define MXC_IRDA_TX_INV	0
-/*!
- * Specifies if the Irda receive path is inverting
- */
-#define MXC_IRDA_RX_INV	0
-
-/* UART 1 configuration */
-/*!
- * This define specifies if the UART port is configured to be in DTE or
- * DCE mode. There exists a define like this for each UART port. Valid
- * values that can be used are \b MODE_DTE or \b MODE_DCE.
- */
-#define UART1_MODE		MODE_DCE
-/*!
- * This define specifies if the UART is to be used for IRDA. There exists a
- * define like this for each UART port. Valid values that can be used are
- * \b IRDA or \b NO_IRDA.
- */
-#define UART1_IR		NO_IRDA
-/*!
- * This define is used to enable or disable a particular UART port. If
- * disabled, the UART will not be registered in the file system and the user
- * will not be able to access it. There exists a define like this for each UART
- * port. Specify a value of 1 to enable the UART and 0 to disable it.
- */
-#define UART1_ENABLED		1
-/*! @} */
-/* UART 2 configuration */
-#define UART2_MODE		MODE_DCE
-#define UART2_IR		NO_IRDA
-#define UART2_ENABLED		1
-/* UART 3 configuration */
-#define UART3_MODE		MODE_DCE
-#define UART3_IR		NO_IRDA
-#define UART3_ENABLED		1
-/* UART 4 configuration */
-#define UART4_MODE		MODE_DCE
-#define UART4_IR		NO_IRDA
-#define UART4_ENABLED		1
-/* UART 5 configuration */
-#define UART5_MODE		MODE_DCE
-#define UART5_IR		NO_IRDA
-#define UART5_ENABLED		1
-
-#define MXC_LL_UART_PADDR	UART1_BASE_ADDR
-#define MXC_LL_UART_VADDR	AIPS1_IO_ADDRESS(UART1_BASE_ADDR)
-
-extern int __init mx53_evk_init_mc13892(void);
-
-#endif				/* __ASM_ARCH_MXC_BOARD_MX53_EVK_H__ */
diff --git a/arch/arm/mach-mx5/dma.c b/arch/arm/mach-mx5/dma.c
index 475d6df..dfc72be 100644
--- a/arch/arm/mach-mx5/dma.c
+++ b/arch/arm/mach-mx5/dma.c
@@ -13,7 +13,9 @@
 #include <linux/init.h>
 #include <linux/device.h>
 #include <asm/dma.h>
+#include <mach/dma.h>
 #include <mach/hardware.h>
+#include <mach/mxc_uart.h>
 
 #include "serial.h"
 #include "sdma_script_code.h"
diff --git a/arch/arm/mach-mx5/mx51_3stack.c b/arch/arm/mach-mx5/mx51_3stack.c
index 49f36dc..4fade5a 100644
--- a/arch/arm/mach-mx5/mx51_3stack.c
+++ b/arch/arm/mach-mx5/mx51_3stack.c
@@ -47,7 +47,6 @@
 #include <mach/mxc_dvfs.h>
 
 #include "devices.h"
-#include "board-mx51_3stack.h"
 #include "iomux.h"
 #include "mx51_pins.h"
 #include "crm_regs.h"
@@ -60,6 +59,44 @@
  *
  * @ingroup MSL_MX51
  */
+#define DEBUG_BOARD_BASE_ADDRESS(n)	(n)
+/* LAN9217 ethernet base address */
+#define LAN9217_BASE_ADDR(n)	(DEBUG_BOARD_BASE_ADDRESS(n))
+
+#define BOARD_IO_ADDR(n)	(DEBUG_BOARD_BASE_ADDRESS(n) + 0x20000)
+/* LED switchs */
+#define LED_SWITCH_REG		0x00
+/* buttons */
+#define SWITCH_BUTTONS_REG	0x08
+/* status, interrupt */
+#define INTR_STATUS_REG	0x10
+#define INTR_MASK_REG		0x38
+#define INTR_RESET_REG		0x20
+/* magic word for debug CPLD */
+#define MAGIC_NUMBER1_REG	0x40
+#define MAGIC_NUMBER2_REG	0x48
+/* CPLD code version */
+#define CPLD_CODE_VER_REG	0x50
+/* magic word for debug CPLD */
+#define MAGIC_NUMBER3_REG	0x58
+/* module reset register*/
+#define MODULE_RESET_REG	0x60
+/* CPU ID and Personality ID */
+#define MCU_BOARD_ID_REG	0x68
+
+/* interrupts like external uart , external ethernet etc*/
+#define EXPIO_PARENT_INT	IOMUX_TO_IRQ(MX51_PIN_GPIO1_6)
+
+#define EXPIO_INT_ENET		(MXC_BOARD_IRQ_START + 0)
+#define EXPIO_INT_XUART_A 	(MXC_BOARD_IRQ_START + 1)
+#define EXPIO_INT_XUART_B 	(MXC_BOARD_IRQ_START + 2)
+#define EXPIO_INT_BUTTON_A 	(MXC_BOARD_IRQ_START + 3)
+#define EXPIO_INT_BUTTON_B 	(MXC_BOARD_IRQ_START + 4)
+
+/*! This is System IRQ used by LAN9217 */
+#define LAN9217_IRQ	EXPIO_INT_ENET
+
+extern int __init mx51_3stack_init_mc13892(void);
 extern void __init mx51_3stack_io_init(void);
 extern struct cpu_wp *(*get_cpu_wp)(int *wp);
 extern void (*set_num_cpu_wp)(int num);
diff --git a/arch/arm/mach-mx5/mx51_babbage.c b/arch/arm/mach-mx5/mx51_babbage.c
index 686f8f0..f675993 100644
--- a/arch/arm/mach-mx5/mx51_babbage.c
+++ b/arch/arm/mach-mx5/mx51_babbage.c
@@ -45,7 +45,6 @@
 #include <mach/mxc_edid.h>
 
 #include "devices.h"
-#include "board-mx51_babbage.h"
 #include "iomux.h"
 #include "mx51_pins.h"
 #include "crm_regs.h"
@@ -58,6 +57,7 @@
  *
  * @ingroup MSL_MX51
  */
+extern int __init mx51_babbage_init_mc13892(void);
 extern void __init mx51_babbage_io_init(void);
 extern struct cpu_wp *(*get_cpu_wp)(int *wp);
 extern void (*set_num_cpu_wp)(int num);
diff --git a/arch/arm/mach-mx5/mx53_evk.c b/arch/arm/mach-mx5/mx53_evk.c
index f134209..020de68 100644
--- a/arch/arm/mach-mx5/mx53_evk.c
+++ b/arch/arm/mach-mx5/mx53_evk.c
@@ -57,7 +57,6 @@
 #include <mach/gpio.h>
 #include <mach/mmc.h>
 #include <mach/mxc_dvfs.h>
-#include "board-mx53_evk.h"
 #include "iomux.h"
 #include "mx53_pins.h"
 #include "crm_regs.h"
@@ -71,6 +70,7 @@
  *
  * @ingroup MSL_MX53
  */
+extern int __init mx53_evk_init_mc13892(void);
 extern void __init mx53_evk_io_init(void);
 extern struct cpu_wp *(*get_cpu_wp)(int *wp);
 extern void (*set_num_cpu_wp)(int num);
diff --git a/arch/arm/mach-mx5/serial.c b/arch/arm/mach-mx5/serial.c
index 053829c..ec65140 100644
--- a/arch/arm/mach-mx5/serial.c
+++ b/arch/arm/mach-mx5/serial.c
@@ -23,7 +23,6 @@
 #include <mach/hardware.h>
 #include <mach/mxc_uart.h>
 #include "serial.h"
-#include "board-mx53_evk.h"
 
 #if defined(CONFIG_SERIAL_MXC) || defined(CONFIG_SERIAL_MXC_MODULE)
 
@@ -42,13 +41,11 @@ static uart_mxc_port mxc_ports[] = {
 			.flags = ASYNC_BOOT_AUTOCONF,
 			.line = 0,
 			},
-	       .ints_muxed = UART1_MUX_INTS,
-	       .mode = UART1_MODE,
-	       .ir_mode = UART1_IR,
-	       .enabled = UART1_ENABLED,
-	       .hardware_flow = UART1_HW_FLOW,
+	       .ints_muxed = 1,
+	       .mode = MODE_DCE,
+	       .ir_mode = NO_IRDA,
+	       .enabled = 1,
 	       .cts_threshold = UART1_UCR4_CTSTL,
-	       .dma_enabled = UART1_DMA_ENABLE,
 	       .dma_rxbuf_size = UART1_DMA_RXBUFSIZE,
 	       .rx_threshold = UART1_UFCR_RXTL,
 	       .tx_threshold = UART1_UFCR_TXTL,
@@ -63,13 +60,11 @@ static uart_mxc_port mxc_ports[] = {
 			.flags = ASYNC_BOOT_AUTOCONF,
 			.line = 1,
 			},
-	       .ints_muxed = UART2_MUX_INTS,
-	       .mode = UART2_MODE,
-	       .ir_mode = UART2_IR,
-	       .enabled = UART2_ENABLED,
-	       .hardware_flow = UART2_HW_FLOW,
+	       .ints_muxed = 1,
+	       .mode = MODE_DCE,
+	       .ir_mode = NO_IRDA,
+	       .enabled = 1,
 	       .cts_threshold = UART2_UCR4_CTSTL,
-	       .dma_enabled = UART2_DMA_ENABLE,
 	       .dma_rxbuf_size = UART2_DMA_RXBUFSIZE,
 	       .rx_threshold = UART2_UFCR_RXTL,
 	       .tx_threshold = UART2_UFCR_TXTL,
@@ -84,13 +79,12 @@ static uart_mxc_port mxc_ports[] = {
 			.flags = ASYNC_BOOT_AUTOCONF,
 			.line = 2,
 			},
-	       .ints_muxed = UART3_MUX_INTS,
-	       .mode = UART3_MODE,
-	       .ir_mode = UART3_IR,
-	       .enabled = UART3_ENABLED,
-	       .hardware_flow = UART3_HW_FLOW,
+	       .ints_muxed = 1,
+	       .mode = MODE_DCE,
+	       .ir_mode = NO_IRDA,
+	       .enabled = 1,
 	       .cts_threshold = UART3_UCR4_CTSTL,
-	       .dma_enabled = UART3_DMA_ENABLE,
+	       .dma_enabled = 1,
 	       .dma_rxbuf_size = UART3_DMA_RXBUFSIZE,
 	       .rx_threshold = UART3_UFCR_RXTL,
 	       .tx_threshold = UART3_UFCR_TXTL,
@@ -105,13 +99,11 @@ static uart_mxc_port mxc_ports[] = {
 			.flags = ASYNC_BOOT_AUTOCONF,
 			.line = 3,
 			},
-	       .ints_muxed = UART4_MUX_INTS,
-	       .mode = UART4_MODE,
-	       .ir_mode = UART4_IR,
-	       .enabled = UART4_ENABLED,
-	       .hardware_flow = UART4_HW_FLOW,
+	       .ints_muxed = 1,
+	       .mode = MODE_DCE,
+	       .ir_mode = NO_IRDA,
+	       .enabled = 1,
 	       .cts_threshold = UART4_UCR4_CTSTL,
-	       .dma_enabled = UART4_DMA_ENABLE,
 	       .dma_rxbuf_size = UART4_DMA_RXBUFSIZE,
 	       .rx_threshold = UART4_UFCR_RXTL,
 	       .tx_threshold = UART4_UFCR_TXTL,
@@ -126,13 +118,11 @@ static uart_mxc_port mxc_ports[] = {
 			.flags = ASYNC_BOOT_AUTOCONF,
 			.line = 4,
 			},
-	       .ints_muxed = UART5_MUX_INTS,
-	       .mode = UART5_MODE,
-	       .ir_mode = UART5_IR,
-	       .enabled = UART5_ENABLED,
-	       .hardware_flow = UART5_HW_FLOW,
+	       .ints_muxed = 1,
+	       .mode = MODE_DCE,
+	       .ir_mode = NO_IRDA,
+	       .enabled = 1,
 	       .cts_threshold = UART5_UCR4_CTSTL,
-	       .dma_enabled = UART5_DMA_ENABLE,
 	       .dma_rxbuf_size = UART5_DMA_RXBUFSIZE,
 	       .rx_threshold = UART5_UFCR_RXTL,
 	       .tx_threshold = UART5_UFCR_TXTL,
@@ -149,18 +139,9 @@ static struct resource mxc_uart_resources1[] = {
 		.flags = IORESOURCE_MEM,
 	},
 	{
-		.start = UART1_INT1,
+		.start = MXC_INT_UART1,
 		.flags = IORESOURCE_IRQ,
 	},
-	{
-		.start = UART1_INT2,
-		.flags = IORESOURCE_IRQ,
-	},
-	{
-		.start = UART1_INT3,
-		.flags = IORESOURCE_IRQ,
-	},
-
 };
 
 static struct platform_device mxc_uart_device1 = {
@@ -180,15 +161,7 @@ static struct resource mxc_uart_resources2[] = {
 		.flags = IORESOURCE_MEM,
 	},
 	{
-		.start = UART2_INT1,
-		.flags = IORESOURCE_IRQ,
-	},
-	{
-		.start = UART2_INT2,
-		.flags = IORESOURCE_IRQ,
-	},
-	{
-		.start = UART2_INT3,
+		.start = MXC_INT_UART2,
 		.flags = IORESOURCE_IRQ,
 	},
 };
@@ -210,15 +183,7 @@ static struct resource mxc_uart_resources3[] = {
 		.flags = IORESOURCE_MEM,
 	},
 	{
-		.start = UART3_INT1,
-		.flags = IORESOURCE_IRQ,
-	},
-	{
-		.start = UART3_INT2,
-		.flags = IORESOURCE_IRQ,
-	},
-	{
-		.start = UART3_INT3,
+		.start = MXC_INT_UART3,
 		.flags = IORESOURCE_IRQ,
 	},
 };
@@ -240,15 +205,7 @@ static struct resource mxc_uart_resources4[] = {
 		.flags = IORESOURCE_MEM,
 	},
 	{
-		.start = UART4_INT1,
-		.flags = IORESOURCE_IRQ,
-	},
-	{
-		.start = UART4_INT2,
-		.flags = IORESOURCE_IRQ,
-	},
-	{
-		.start = UART4_INT3,
+		.start = MXC_INT_UART4,
 		.flags = IORESOURCE_IRQ,
 	},
 };
@@ -270,15 +227,7 @@ static struct resource mxc_uart_resources5[] = {
 		.flags = IORESOURCE_MEM,
 	},
 	{
-		.start = UART5_INT1,
-		.flags = IORESOURCE_IRQ,
-	},
-	{
-		.start = UART5_INT2,
-		.flags = IORESOURCE_IRQ,
-	},
-	{
-		.start = UART5_INT3,
+		.start = MXC_INT_UART5,
 		.flags = IORESOURCE_IRQ,
 	},
 };
@@ -311,16 +260,10 @@ static int __init mxc_init_uart(void)
 	/* Register all the MXC UART platform device structures */
 	platform_device_register(&mxc_uart_device1);
 	platform_device_register(&mxc_uart_device2);
-#if UART3_ENABLED == 1
 	platform_device_register(&mxc_uart_device3);
-#endif				/* UART3_ENABLED */
 	if (cpu_is_mx53()) {
-#if UART4_ENABLED == 1
 		platform_device_register(&mxc_uart_device4);
-#endif				/* UART4_ENABLED */
-#if UART5_ENABLED == 1
 		platform_device_register(&mxc_uart_device5);
-#endif				/* UART5_ENABLED */
 	}
 	return 0;
 }
diff --git a/arch/arm/mach-mx5/serial.h b/arch/arm/mach-mx5/serial.h
index aa97228..d487a96 100644
--- a/arch/arm/mach-mx5/serial.h
+++ b/arch/arm/mach-mx5/serial.h
@@ -14,17 +14,8 @@
 #ifndef __ARCH_ARM_MACH_MX51_SERIAL_H__
 #define __ARCH_ARM_MACH_MX51_SERIAL_H__
 
-#include <mach/mxc_uart.h>
-
 /* UART 1 configuration */
 /*!
- * This option allows to choose either an interrupt-driven software controlled
- * hardware flow control (set this option to 0) or hardware-driven hardware
- * flow control (set this option to 1).
- */
-/* UART used as wakeup source */
-#define UART1_HW_FLOW           0
-/*!
  * This specifies the threshold at which the CTS pin is deasserted by the
  * RXFIFO. Set this value in Decimal to anything from 0 to 32 for
  * hardware-driven hardware flow control. Read the HW spec while specifying
@@ -33,10 +24,6 @@
  */
 #define UART1_UCR4_CTSTL        16
 /*!
- * This is option to enable (set this option to 1) or disable DMA data transfer
- */
-#define UART1_DMA_ENABLE        0
-/*!
  * Specify the size of the DMA receive buffer. The minimum buffer size is 512
  * bytes. The buffer size should be a multiple of 256.
  */
@@ -56,88 +43,24 @@
  */
 #define UART1_UFCR_TXTL         16
 /* UART 2 configuration */
-#define UART2_HW_FLOW           0
 #define UART2_UCR4_CTSTL        -1
-#define UART2_DMA_ENABLE        0
 #define UART2_DMA_RXBUFSIZE     512
 #define UART2_UFCR_RXTL         16
 #define UART2_UFCR_TXTL         16
 /* UART 3 configuration */
-#define UART3_HW_FLOW           1
 #define UART3_UCR4_CTSTL        16
-#define UART3_DMA_ENABLE        1
 #define UART3_DMA_RXBUFSIZE     1024
 #define UART3_UFCR_RXTL         16
 #define UART3_UFCR_TXTL         16
 /* UART 4 configuration */
-#define UART4_HW_FLOW           0
 #define UART4_UCR4_CTSTL        -1
-#define UART4_DMA_ENABLE        0
 #define UART4_DMA_RXBUFSIZE     512
 #define UART4_UFCR_RXTL         16
 #define UART4_UFCR_TXTL         16
 /* UART 5 configuration */
-#define UART5_HW_FLOW           0
 #define UART5_UCR4_CTSTL        -1
-#define UART5_DMA_ENABLE        0
 #define UART5_DMA_RXBUFSIZE     512
 #define UART5_UFCR_RXTL         16
 #define UART5_UFCR_TXTL         16
-/*
- * UART Chip level Configuration that a user may not have to edit. These
- * configuration vary depending on how the UART module is integrated with
- * the ARM core
- */
-/*
- * Is the MUXED interrupt output sent to the ARM core
- */
-#define INTS_NOTMUXED           0
-#define INTS_MUXED              1
-/* UART 1 configuration */
-/*!
- * This define specifies whether the muxed ANDed interrupt line or the
- * individual interrupts from the UART port is integrated with the ARM core.
- * There exists a define like this for each UART port. Valid values that can
- * be used are \b INTS_NOTMUXED or \b INTS_MUXED.
- */
-#define UART1_MUX_INTS          INTS_MUXED
-/*!
- * This define specifies the transmitter interrupt number or the interrupt
- * number of the ANDed interrupt in case the interrupts are muxed. There exists
- * a define like this for each UART port.
- */
-#define UART1_INT1              MXC_INT_UART1
-/*!
- * This define specifies the receiver interrupt number. If the interrupts of
- * the UART are muxed, then we specify here a dummy value -1. There exists a
- * define like this for each UART port.
- */
-#define UART1_INT2              -1
-/*!
- * This specifies the master interrupt number. If the interrupts of the UART
- * are muxed, then we specify here a dummy value of -1. There exists a define
- * like this for each UART port.
- */
-#define UART1_INT3              -1
-/* UART 2 configuration */
-#define UART2_MUX_INTS          INTS_MUXED
-#define UART2_INT1              MXC_INT_UART2
-#define UART2_INT2              -1
-#define UART2_INT3              -1
-/* UART 3 configuration */
-#define UART3_MUX_INTS          INTS_MUXED
-#define UART3_INT1              MXC_INT_UART3
-#define UART3_INT2              -1
-#define UART3_INT3              -1
-/* UART 4 configuration */
-#define UART4_MUX_INTS          INTS_MUXED
-#define UART4_INT1              MXC_INT_UART4
-#define UART4_INT2              -1
-#define UART4_INT3              -1
-/* UART 5 configuration */
-#define UART5_MUX_INTS          INTS_MUXED
-#define UART5_INT1              MXC_INT_UART5
-#define UART5_INT2              -1
-#define UART5_INT3              -1
 
 #endif				/* __ARCH_ARM_MACH_MX51_SERIAL_H__ */
-- 
1.5.4.4

